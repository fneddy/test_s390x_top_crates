[cfg-if] download directory: /tmp/top100_artifacts/cfg-if-1.0.0
+ curl -sL https://crates.io/api/v1/crates/cfg-if/1.0.0/download
+ tar xzf -
+ cd /tmp/top100_artifacts/cfg-if-1.0.0
+ cargo clean
     Removed 0 files
+ cargo +stable test ''
    Updating crates.io index
    Blocking waiting for file lock on package cache
     Locking 2 packages to latest compatible versions
    Blocking waiting for file lock on package cache
   Compiling cfg-if v1.0.0 (/tmp/top100_artifacts/cfg-if-1.0.0)
warning: unexpected `cfg` condition name: `foo`
 --> tests/xcrate.rs:2:14
  |
2 |     if #[cfg(foo)] {
  |              ^^^
  |
  = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(foo)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(foo)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

error: unexpected `cfg` condition name: `foo`
   --> src/lib.rs:101:18
    |
101 |         if #[cfg(foo)] {
    |                  ^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(foo)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(foo)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
note: the lint level is defined here
   --> src/lib.rs:29:24
    |
29  | #![cfg_attr(test, deny(warnings))]
    |                        ^^^^^^^^
    = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`

error: unexpected `cfg` condition name: `foo`
   --> src/lib.rs:111:18
    |
111 |         if #[cfg(foo)] {
    |                  ^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(foo)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(foo)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

error: unexpected `cfg` condition name: `foo`
   --> src/lib.rs:126:18
    |
126 |         if #[cfg(foo)] {
    |                  ^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(foo)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(foo)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

error: unexpected `cfg` condition value: `blah`
   --> src/lib.rs:165:22
    |
165 |             if #[cfg(feature = "blah")] {
    |                      ^^^^^^^
    |
    = note: expected values for `feature` are: `compiler_builtins`, `core`, and `rustc-dep-of-std`
    = help: consider adding `blah` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

error: trait `Trait` is never used
   --> src/lib.rs:156:11
    |
156 |     trait Trait {
    |           ^^^^^
    |
    = note: `#[deny(dead_code)]` implied by `#[deny(warnings)]`

error: could not compile `cfg-if` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
warning: `cfg-if` (test "xcrate") generated 1 warning
+ RESULT=101
+ cd /tmp/top100_artifacts
+ rm -rf /tmp/top100_artifacts/cfg-if-1.0.0
+ exit 101
