[lazy_static] download directory: /tmp/top100_artifacts/lazy_static-1.5.0
+ curl -sL https://crates.io/api/v1/crates/lazy_static/1.5.0/download
+ tar xzf -
+ cd /tmp/top100_artifacts/lazy_static-1.5.0
+ cargo clean
     Removed 0 files
+ cargo +stable test ''
warning: no edition set: defaulting to the 2015 edition while the latest is 2024
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling serde v1.0.203
   Compiling proc-macro2 v1.0.86
   Compiling unicode-ident v1.0.12
   Compiling equivalent v1.0.1
   Compiling hashbrown v0.14.5
   Compiling winnow v0.6.13
   Compiling indexmap v2.2.6
   Compiling quote v1.0.36
   Compiling serde_json v1.0.117
   Compiling syn v2.0.67
   Compiling doc-comment v0.3.3
   Compiling trybuild v1.0.96
   Compiling ryu v1.0.18
   Compiling itoa v1.0.11
   Compiling termcolor v1.4.1
   Compiling glob v0.3.1
   Compiling lazy_static v1.5.0 (/tmp/top100_artifacts/lazy_static-1.5.0)
warning: elided lifetime has a name
  --> src/inline_lazy.rs:26:43
   |
26 |     pub fn get<F>(&'static self, f: F) -> &T
   |                                           ^ this elided lifetime gets resolved as `'static`
   |
   = note: `#[warn(elided_named_lifetimes)]` on by default
help: consider specifying it explicitly
   |
26 |     pub fn get<F>(&'static self, f: F) -> &'static T
   |                                            +++++++

warning: `lazy_static` (lib) generated 1 warning (run `cargo fix --lib -p lazy_static` to apply 1 suggestion)
   Compiling serde_spanned v0.6.6
   Compiling toml_datetime v0.6.6
   Compiling toml_edit v0.22.14
   Compiling serde_derive v1.0.203
   Compiling toml v0.8.14
warning: `lazy_static` (lib test) generated 1 warning (1 duplicate)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 18.35s
     Running unittests src/lib.rs (target/debug/deps/lazy_static-988ab985184c1842)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/no_std.rs (target/debug/deps/no_std-471dc1aaa52f8342)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/test.rs (target/debug/deps/test-c05519e3b165b4a2)

running 9 tests
test item_name_shadowing ... ok
test lifetime_name ... ok
test pre_init ... ok
test s3 ... ok
test test_basic ... ok
test test_visibility ... ok
test test_meta ... ok
test test_repeat ... ok
test visibility::sub_test ... ok

test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/ui.rs (target/debug/deps/ui-fa0aeda61faffb27)

running 1 test
warning: /tmp/top100_artifacts/lazy_static-1.5.0/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024
   Compiling doc-comment v0.3.3
    Checking lazy_static v1.5.0 (/tmp/top100_artifacts/lazy_static-1.5.0)
warning: elided lifetime has a name
  --> /tmp/top100_artifacts/lazy_static-1.5.0/src/inline_lazy.rs:26:43
   |
26 |     pub fn get<F>(&'static self, f: F) -> &T
   |                                           ^ this elided lifetime gets resolved as `'static`
   |
   = note: `#[warn(elided_named_lifetimes)]` on by default
help: consider specifying it explicitly
   |
26 |     pub fn get<F>(&'static self, f: F) -> &'static T
   |                                            +++++++

warning: `lazy_static` (lib) generated 1 warning (run `cargo fix --lib -p lazy_static` to apply 1 suggestion)
    Checking lazy_static-tests v0.0.0 (/tmp/top100_artifacts/lazy_static-1.5.0/target/tests/trybuild/lazy_static)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.39s


test tests/compile_fail/incorrect_visibility_restriction.rs ... mismatch

EXPECTED:
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
error[E0704]: incorrect visibility restriction
 --> tests/compile_fail/incorrect_visibility_restriction.rs:5:9
  |
5 |     pub(nonsense) static ref WRONG: () = ();
  |         ^^^^^^^^ help: make this visible only to module `nonsense` with `in`: `in nonsense`
  |
  = help: some possible visibility restrictions are:
          `pub(crate)`: visible only on the current crate
          `pub(super)`: visible only in the current module's parent
          `pub(in path::to::module)`: visible only on the specified path
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

ACTUAL OUTPUT:
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
error[E0704]: incorrect visibility restriction
 --> tests/compile_fail/incorrect_visibility_restriction.rs:5:9
  |
5 |     pub(nonsense) static ref WRONG: () = ();
  |         ^^^^^^^^
  |
  = help: some possible visibility restrictions are:
          `pub(crate)`: visible only on the current crate
          `pub(super)`: visible only in the current module's parent
          `pub(in path::to::module)`: visible only on the specified path
help: make this visible only to module `nonsense` with `in`
  |
5 |     pub(in nonsense) static ref WRONG: () = ();
  |         ++
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
note: If the actual output is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test tests/compile_fail/static_is_private.rs ... ok
test tests/compile_fail/static_is_sized.rs ... mismatch

EXPECTED:
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
note: required by an implicit `Sized` bound in `Lazy`
 --> src/inline_lazy.rs
  |
  | pub struct Lazy<T: Sync>(Cell<MaybeUninit<T>>, Once);
  |                 ^ required by the implicit `Sized` requirement on this type parameter in `Lazy`
  = note: this error originates in the macro `__lazy_static_create` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
note: required by an implicit `Sized` bound in `Lazy`
 --> src/inline_lazy.rs
  |
  | pub struct Lazy<T: Sync>(Cell<MaybeUninit<T>>, Once);
  |                 ^ required by the implicit `Sized` requirement on this type parameter in `Lazy`
  = note: this error originates in the macro `__lazy_static_create` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:5:25
  |
5 |     pub static ref FOO: str = panic!();
  |                         ^^^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = note: the return type of a function must have a statically known size

error[E0599]: the method `get` exists for struct `Lazy<str>`, but its trait bounds were not satisfied
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ method cannot be called on `Lazy<str>` due to unsatisfied trait bounds
  |
  = note: the following trait bounds were not satisfied:
          `str: Sized`
  = note: this error originates in the macro `__lazy_static_internal` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = note: the return type of a function must have a statically known size
  = note: this error originates in the macro `__lazy_static_internal` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

ACTUAL OUTPUT:
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:5:25
  |
5 |     pub static ref FOO: str = panic!();
  |                         ^^^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = note: the return type of a function must have a statically known size

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
note: required by an implicit `Sized` bound in `Lazy`
 --> src/inline_lazy.rs
  |
  | pub struct Lazy<T: Sync>(Cell<MaybeUninit<T>>, Once);
  |                 ^ required by the implicit `Sized` requirement on this type parameter in `Lazy`
  = note: this error originates in the macro `__lazy_static_create` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
note: required by an implicit `Sized` bound in `Lazy`
 --> src/inline_lazy.rs
  |
  | pub struct Lazy<T: Sync>(Cell<MaybeUninit<T>>, Once);
  |                 ^ required by the implicit `Sized` requirement on this type parameter in `Lazy`
  = note: this error originates in the macro `__lazy_static_create` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `get` exists for struct `Lazy<str>`, but its trait bounds were not satisfied
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ method cannot be called on `Lazy<str>` due to unsatisfied trait bounds
  |
  = note: the following trait bounds were not satisfied:
          `str: Sized`
  = note: this error originates in the macro `__lazy_static_internal` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `str` cannot be known at compilation time
 --> tests/compile_fail/static_is_sized.rs:4:1
  |
4 | / lazy_static! {
5 | |     pub static ref FOO: str = panic!();
6 | | }
  | |_^ doesn't have a size known at compile-time
  |
  = help: the trait `Sized` is not implemented for `str`
  = note: the return type of a function must have a statically known size
  = note: this error originates in the macro `__lazy_static_internal` which comes from the expansion of the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
note: If the actual output is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite



test ui ... FAILED

failures:

---- ui stdout ----

thread 'ui' panicked at /home/eddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/trybuild-1.0.96/src/run.rs:101:13:
2 of 3 tests failed
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    ui

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.59s

error: test failed, to rerun pass `--test ui`
+ RESULT=101
+ cd /tmp/top100_artifacts
+ rm -rf /tmp/top100_artifacts/lazy_static-1.5.0
+ exit 101
