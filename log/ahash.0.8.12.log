[ahash] download directory: /tmp/top100_artifacts/ahash-0.8.12
+ curl -sL https://crates.io/api/v1/crates/ahash/0.8.12/download
+ tar xzf -
+ cd /tmp/top100_artifacts/ahash-0.8.12
+ cargo clean
     Removed 0 files
+ cargo +stable test ''
warning: file `/tmp/top100_artifacts/ahash-0.8.12/tests/bench.rs` found to be present in multiple build targets:
  * `integration-test` target `bench`
  * `bench` target `ahash`
warning: file `/tmp/top100_artifacts/ahash-0.8.12/tests/map_tests.rs` found to be present in multiple build targets:
  * `integration-test` target `map_tests`
  * `bench` target `map`
    Updating crates.io index
    Blocking waiting for file lock on package cache
     Locking 102 packages to latest compatible versions
      Adding criterion v0.3.6 (available: v0.6.0)
      Adding hashbrown v0.14.5 (available: v0.15.3)
      Adding rand v0.8.5 (available: v0.9.1)
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling libc v0.2.172
   Compiling cfg-if v1.0.0
   Compiling zerocopy v0.8.25
   Compiling version_check v0.9.5
   Compiling crossbeam-utils v0.8.21
   Compiling serde v1.0.219
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling memchr v2.7.4
   Compiling autocfg v1.4.0
   Compiling crossbeam-epoch v0.9.18
   Compiling num-traits v0.2.19
   Compiling getrandom v0.2.16
   Compiling quote v1.0.40
   Compiling either v1.15.0
   Compiling rayon-core v1.12.1
   Compiling ryu v1.0.20
   Compiling itoa v1.0.15
   Compiling serde_json v1.0.140
   Compiling syn v2.0.101
   Compiling rand_core v0.6.4
   Compiling crossbeam-deque v0.8.6
   Compiling ahash v0.8.12
   Compiling getrandom v0.3.3
   Compiling unicode-width v0.1.14
   Compiling once_cell v1.21.3
   Compiling regex-syntax v0.8.5
   Compiling plotters-backend v0.3.7
   Compiling plotters-svg v0.3.7
   Compiling textwrap v0.11.0
   Compiling regex-automata v0.4.9
   Compiling itertools v0.10.5
   Compiling ppv-lite86 v0.2.21
   Compiling csv-core v0.1.12
   Compiling ahash v0.8.12 (/tmp/top100_artifacts/ahash-0.8.12)
   Compiling no-panic v0.1.35
   Compiling bitflags v1.3.2
   Compiling cast v0.3.0
   Compiling same-file v1.0.6
   Compiling half v1.8.3
   Compiling walkdir v2.5.0
   Compiling criterion-plot v0.4.5
   Compiling serde_cbor v0.11.2
   Compiling clap v2.34.0
   Compiling csv v1.3.1
   Compiling rand_chacha v0.3.1
   Compiling plotters v0.3.7
   Compiling serde_derive v1.0.219
   Compiling rayon v1.10.0
   Compiling regex v1.11.1
   Compiling tinytemplate v1.2.1
   Compiling atty v0.2.14
   Compiling lazy_static v1.5.0
   Compiling byteorder v1.5.0
   Compiling allocator-api2 v0.2.21
   Compiling oorandom v11.1.5
   Compiling fxhash v0.2.1
   Compiling criterion v0.3.6
   Compiling hashbrown v0.14.5
   Compiling rand v0.8.5
   Compiling pcg-mwc v0.2.1
   Compiling smallvec v1.15.0
   Compiling fnv v1.0.7
   Compiling hex v0.4.3
   Compiling seahash v4.1.0
warning: unexpected `cfg` condition value: `128`
   --> src/fallback_hash.rs:164:11
    |
164 |     #[cfg(target_pointer_width = "128")]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `target_pointer_width` are: `16`, `32`, and `64`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `fuzzing`
  --> src/random_state.rs:48:58
   |
48 |     if #[cfg(all(feature = "compile-time-rng", any(test, fuzzing)))] {
   |                                                          ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, `folded_multiply`, `specialize`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> src/random_state.rs:68:54
   |
68 |     } else if #[cfg(all(feature = "runtime-rng", not(fuzzing)))] {
   |                                                      ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: methods `read_u128x2`, `read_u128x4`, `read_last_u16`, `read_last_u128x2`, and `read_last_u128x4` are never used
  --> src/convert.rs:69:8
   |
64 | pub(crate) trait ReadFromSlice {
   |                  ------------- methods in this trait
...
69 |     fn read_u128x2(&self) -> ([u128; 2], &[u8]);
   |        ^^^^^^^^^^^
70 |     fn read_u128x4(&self) -> ([u128; 4], &[u8]);
   |        ^^^^^^^^^^^
71 |     fn read_last_u16(&self) -> u16;
   |        ^^^^^^^^^^^^^
...
75 |     fn read_last_u128x2(&self) -> [u128; 2];
   |        ^^^^^^^^^^^^^^^^
76 |     fn read_last_u128x4(&self) -> [u128; 4];
   |        ^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `ahash` (lib) generated 4 warnings
warning: unused import: `RngCore`
   --> tests/map_tests.rs:231:34
    |
231 |     use rand::{SeedableRng, Rng, RngCore};
    |                                  ^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: `ahash` (lib test) generated 4 warnings (4 duplicates)
warning: `ahash` (test "map_tests") generated 1 warning (run `cargo fix --test "map_tests"` to apply 1 suggestion)
    Finished `test` profile [optimized + debuginfo] target(s) in 38.87s
     Running unittests src/lib.rs (target/debug/deps/ahash-02959fc29754387e)

running 32 tests
test fallback_hash::tests::test_hash ... ok
test hash_map::test::test_borrow ... ok
test hash_quality_test::fallback_tests::fallback_finish_is_consistant ... ok
test hash_quality_test::fallback_tests::fallback_all_bytes_matter ... ok
test hash_quality_test::fallback_tests::fallback_input_affect_every_byte ... ok
test hash_quality_test::fallback_tests::fallback_keys_change_output ... ok
test hash_quality_test::fallback_tests::fallback_length_extension ... ok
test hash_quality_test::fallback_tests::fallback_single_bit_flip ... ok
test hash_quality_test::fallback_tests::fallback_keys_affect_every_byte ... ok
test hash_quality_test::fallback_tests::fallback_single_key_bit_flip ... ok
test hash_quality_test::fallback_tests::fallback_test_no_pair_collisions ... ok
test operations::test::test_add_length ... ok
test operations::test::test_shuffle_contains_each_value ... ok
test operations::test::test_shuffle_moves_every_value ... ok
test operations::test::test_shuffle_moves_high_bits ... ok
test random_state::test::test_not_pi ... ok
test random_state::test::test_unique ... ok
test random_state::test::test_with_seeds_const ... ok
test specialize::test::test_input_processed ... ok
test specialize::test::test_ref_independent ... ok
test test::test_ahash_alias_map_construction ... ok
test test::test_ahash_alias_set_construction ... ok
test test::test_ahasher_construction ... ok
test test::test_builder ... ok
test test::test_conversion ... ok
test test::test_default_builder ... ok
test test::test_non_zero ... ok
test test::test_non_zero_specialized ... ok
test test::test_specialize_reference_hash ... ok
test hash_quality_test::fallback_tests::fallback_padding_doesnot_collide ... ok
test hash_quality_test::fallback_tests::test_no_sparse_collisions ... ok
test hash_quality_test::fallback_tests::fallback_test_no_full_collisions ... ok

test result: ok. 32 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 15.14s

     Running tests/bench.rs (target/debug/deps/bench-046552eff27c9fb1)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/map_tests.rs (target/debug/deps/map_tests-658d4b95fca10e85)

running 5 tests
test test_ahash_alias_set_construction ... ok
test test_ahash_alias_map_construction ... ok
test test_key_ref ... ok
test test_byte_dist ... ok
test test_bucket_distribution ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.16s

     Running tests/nopanic.rs (target/debug/deps/nopanic-8f1034b7f3ca5d10)

running 1 test
test test_no_panic ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

+ RESULT=0
+ cd /tmp/top100_artifacts
+ rm -rf /tmp/top100_artifacts/ahash-0.8.12
+ exit 0
