[hyper] download directory: /var/tmp/top100_artifacts/hyper-1.6.0
+ curl -sL https://crates.io/api/v1/crates/hyper/1.6.0/download
+ tar xzf -
+ cd /var/tmp/top100_artifacts/hyper-1.6.0
+ cargo clean
     Removed 0 files
+ cargo +stable test ''
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling proc-macro2 v1.0.89
   Compiling unicode-ident v1.0.13
   Compiling libc v0.2.164
   Compiling pin-project-lite v0.2.15
   Compiling futures-core v0.3.31
   Compiling bytes v1.8.0
   Compiling memchr v2.7.4
   Compiling quote v1.0.37
   Compiling aho-corasick v1.1.3
   Compiling syn v2.0.87
   Compiling mio v1.0.2
   Compiling socket2 v0.5.7
   Compiling regex-syntax v0.8.5
   Compiling itoa v1.0.11
   Compiling futures-sink v0.3.31
   Compiling fnv v1.0.7
   Compiling serde v1.0.215
   Compiling http v1.2.0
   Compiling regex-automata v0.4.9
   Compiling is-terminal v0.4.13
   Compiling futures-task v0.3.31
   Compiling pin-utils v0.1.0
   Compiling log v0.4.22
   Compiling serde_json v1.0.133
   Compiling termcolor v1.4.1
   Compiling humantime v2.1.0
   Compiling futures-util v0.3.31
   Compiling http-body v1.0.1
   Compiling regex v1.11.1
   Compiling env_logger v0.10.2
   Compiling tokio-macros v2.4.0
   Compiling async-stream-impl v0.3.6
   Compiling tokio v1.41.1
   Compiling serde_derive v1.0.215
   Compiling async-stream v0.3.6
   Compiling percent-encoding v2.3.1
   Compiling ryu v1.0.18
   Compiling form_urlencoded v1.2.1
   Compiling http-body-util v0.1.2
   Compiling pretty_env_logger v0.5.0
   Compiling futures-channel v0.3.31
   Compiling spmc v0.3.0
   Compiling tokio-stream v0.1.16
   Compiling tokio-util v0.7.12
   Compiling tokio-test v0.4.4
   Compiling hyper v1.6.0 (/var/tmp/top100_artifacts/hyper-1.6.0)
error[E0432]: unresolved imports `super::DecodedLength`, `super::Sender`
   --> src/body/incoming.rs:463:23
    |
463 |     use super::{Body, DecodedLength, Incoming, Sender, SizeHint};
    |                       ^^^^^^^^^^^^^            ^^^^^^ no `Sender` in `body::incoming`
    |                       |
    |                       no `DecodedLength` in `body::incoming`
    |
note: found an item that was configured out
   --> src/body/incoming.rs:25:12
    |
25  | use super::DecodedLength;
    |            ^^^^^^^^^^^^^
note: the item is gated here
   --> src/body/incoming.rs:21:1
    |
21  | / #[cfg(all(
22  | |     any(feature = "http1", feature = "http2"),
23  | |     any(feature = "client", feature = "server")
24  | | ))]
    | |___^
    = help: consider importing one of these structs instead:
            std::sync::mpmc::Sender
            std::sync::mpsc::Sender
            futures_channel::mpsc::Sender
            futures_channel::oneshot::Sender
            spmc::Sender
            tokio::net::unix::pipe::Sender
            tokio::sync::broadcast::Sender
            tokio::sync::mpsc::Sender
            tokio::sync::oneshot::Sender
            tokio::sync::watch::Sender
note: found an item that was configured out
   --> src/body/incoming.rs:91:19
    |
91  | pub(crate) struct Sender {
    |                   ^^^^^^
note: the item is gated here
   --> src/body/incoming.rs:90:1
    |
90  | #[cfg(all(feature = "http1", any(feature = "client", feature = "server")))]
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0412]: cannot find type `Sender` in this scope
   --> src/body/incoming.rs:108:33
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |                                 ^^^^^^
    |
   ::: /home/eddy/.rustup/toolchains/stable-s390x-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:90:1
    |
90  | pub unsafe auto trait Send {
    | -------------------------- similarly named trait `Send` defined here
    |
help: a trait with a similar name exists
    |
108 -     pub(crate) fn channel() -> (Sender, Incoming) {
108 +     pub(crate) fn channel() -> (Send, Incoming) {
    |
help: consider importing one of these structs
    |
1   + use std::sync::mpmc::Sender;
    |
1   + use std::sync::mpsc::Sender;
    |
1   + use futures_channel::mpsc::Sender;
    |
1   + use futures_channel::oneshot::Sender;
    |
      and 6 other candidates

error[E0599]: no function or associated item named `new_channel` found for struct `incoming::Incoming` in the current scope
   --> src/body/incoming.rs:109:15
    |
52  | pub struct Incoming {
    | ------------------- function or associated item `new_channel` not found for this struct
...
109 |         Self::new_channel(DecodedLength::CHUNKED, /*wanter =*/ false)
    |               ^^^^^^^^^^^ function or associated item not found in `Incoming`
    |
note: if you're trying to build a new `incoming::Incoming` consider using one of the following associated functions:
      incoming::Incoming::new
      incoming::Incoming::empty
   --> src/body/incoming.rs:138:5
    |
138 |     fn new(kind: Kind) -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
143 |     pub(crate) fn empty() -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `channel` with a similar name
   --> src/body/incoming.rs:108:5
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `DecodedLength`
   --> src/body/incoming.rs:109:27
    |
109 |         Self::new_channel(DecodedLength::CHUNKED, /*wanter =*/ false)
    |                           ^^^^^^^^^^^^^ use of undeclared type `DecodedLength`

error[E0599]: no function or associated item named `new_channel` found for struct `incoming::Incoming` in the current scope
   --> src/body/incoming.rs:508:23
    |
52  | pub struct Incoming {
    | ------------------- function or associated item `new_channel` not found for this struct
...
508 |             Incoming::new_channel(DecodedLength::new(4), /*wanter =*/ false).1,
    |                       ^^^^^^^^^^^ function or associated item not found in `Incoming`
    |
note: if you're trying to build a new `incoming::Incoming` consider using one of the following associated functions:
      incoming::Incoming::new
      incoming::Incoming::empty
   --> src/body/incoming.rs:138:5
    |
138 |     fn new(kind: Kind) -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
143 |     pub(crate) fn empty() -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `channel` with a similar name
   --> src/body/incoming.rs:108:5
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `new_channel` found for struct `incoming::Incoming` in the current scope
   --> src/body/incoming.rs:569:39
    |
52  | pub struct Incoming {
    | ------------------- function or associated item `new_channel` not found for this struct
...
569 |         let (mut tx, _rx) = Incoming::new_channel(DecodedLength::CHUNKED, /*wanter = */ false);
    |                                       ^^^^^^^^^^^ function or associated item not found in `Incoming`
    |
note: if you're trying to build a new `incoming::Incoming` consider using one of the following associated functions:
      incoming::Incoming::new
      incoming::Incoming::empty
   --> src/body/incoming.rs:138:5
    |
138 |     fn new(kind: Kind) -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
143 |     pub(crate) fn empty() -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `channel` with a similar name
   --> src/body/incoming.rs:108:5
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `new_channel` found for struct `incoming::Incoming` in the current scope
   --> src/body/incoming.rs:579:23
    |
52  | pub struct Incoming {
    | ------------------- function or associated item `new_channel` not found for this struct
...
579 |             Incoming::new_channel(DecodedLength::CHUNKED, /*wanter = */ true);
    |                       ^^^^^^^^^^^ function or associated item not found in `Incoming`
    |
note: if you're trying to build a new `incoming::Incoming` consider using one of the following associated functions:
      incoming::Incoming::new
      incoming::Incoming::empty
   --> src/body/incoming.rs:138:5
    |
138 |     fn new(kind: Kind) -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
143 |     pub(crate) fn empty() -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `channel` with a similar name
   --> src/body/incoming.rs:108:5
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `new_channel` found for struct `incoming::Incoming` in the current scope
   --> src/body/incoming.rs:600:38
    |
52  | pub struct Incoming {
    | ------------------- function or associated item `new_channel` not found for this struct
...
600 |         let (mut tx, rx) = Incoming::new_channel(DecodedLength::CHUNKED, /*wanter = */ true);
    |                                      ^^^^^^^^^^^ function or associated item not found in `Incoming`
    |
note: if you're trying to build a new `incoming::Incoming` consider using one of the following associated functions:
      incoming::Incoming::new
      incoming::Incoming::empty
   --> src/body/incoming.rs:138:5
    |
138 |     fn new(kind: Kind) -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
143 |     pub(crate) fn empty() -> Incoming {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `channel` with a similar name
   --> src/body/incoming.rs:108:5
    |
108 |     pub(crate) fn channel() -> (Sender, Incoming) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0282]: type annotations needed
   --> src/body/incoming.rs:613:42
    |
613 |             Poll::Ready(Err(ref e)) if e.is_closed() => (),
    |                                          ^^^^^^^^^ cannot infer type for type parameter `E` declared on the enum `Result`

Some errors have detailed explanations: E0282, E0412, E0432, E0433, E0599.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `hyper` (lib test) due to 9 previous errors
+ RESULT=101
+ cd /var/tmp/top100_artifacts
+ rm -rf /var/tmp/top100_artifacts/hyper-1.6.0
+ exit 101
