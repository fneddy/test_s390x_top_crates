[slab] download directory: /var/tmp/top100_artifacts/slab-0.4.9
+ curl -sL https://crates.io/api/v1/crates/slab/0.4.9/download
+ tar xzf -
+ cd /var/tmp/top100_artifacts/slab-0.4.9
+ cargo clean
     Removed 0 files
+ cargo +stable test ''
    Blocking waiting for file lock on package cache
    Updating crates.io index
    Blocking waiting for file lock on package cache
     Locking 9 packages to latest compatible versions
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling serde v1.0.219
   Compiling autocfg v1.4.0
   Compiling rustversion v1.0.20
   Compiling slab v0.4.9 (/var/tmp/top100_artifacts/slab-0.4.9)
warning: unexpected `cfg` condition name: `slab_no_const_vec_new`
   --> src/lib.rs:250:15
    |
250 |     #[cfg(not(slab_no_const_vec_new))]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_const_vec_new)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_const_vec_new)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `slab_no_const_vec_new`
   --> src/lib.rs:264:11
    |
264 |     #[cfg(slab_no_const_vec_new)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_const_vec_new)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_const_vec_new)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
   --> src/lib.rs:929:20
    |
929 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> src/lib.rs:1098:20
     |
1098 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> src/lib.rs:1206:20
     |
1206 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> src/lib.rs:1216:20
     |
1216 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

   Compiling quote v1.0.40
warning: `slab` (lib) generated 6 warnings
   Compiling syn v2.0.101
   Compiling serde_derive v1.0.219
   Compiling serde_test v1.0.177
warning: `slab` (lib test) generated 6 warnings (6 duplicates)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 11.67s
     Running unittests src/lib.rs (target/debug/deps/slab-d7970b9d32ae9509)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/serde.rs (target/debug/deps/serde-e3b4141e3671b9fc)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/slab.rs (target/debug/deps/slab-bfa53e4339747c31)

running 45 tests
test clone_from ... ok
test compact_handles_closure_panic ... ok
test compact_moves_successfully ... ok
test compact_doesnt_move_if_closure_errors ... ok
test const_new ... ok
test compact_empty ... ok
test clear ... ok
test from_iterator_issue_100 ... ok
test from_iterator_new_in_order ... ok
test from_iterator_sorted ... ok
test from_iterator_unordered ... ok
test fully_consumed_drain ... ok
test get_vacant_entry_without_using ... ok
test insert_get_many ... ok
test insert_get_remove_many ... ok
test insert_get_remove_one ... ok
test insert_with_vacant_entry ... ok
test into_iter ... ok
test into_iter_rev ... ok
test invalid_get_mut_panics - should panic ... ok
test invalid_get_panics - should panic ... ok
test invalid_remove_panics - should panic ... ok
test iter ... ok
test iter_mut ... ok
test iter_mut_rev ... ok
test iter_rev ... ok
test key_of_layout_optimizable ... ok
test key_of_tagged ... ok
test key_of_zst ... ok
test partially_consumed_drain ... ok
test reserve_does_not_allocate_if_available ... ok
test reserve_does_panic_with_capacity_overflow - should panic ... ok
test reserve_does_panic_with_capacity_overflow_bytes - should panic ... ok
test reserve_exact_does_not_allocate_if_available ... ok
test reserve_exact_does_panic_with_capacity_overflow - should panic ... ok
test retain ... ok
test shrink_to_fit_doesnt_move ... ok
test shrink_to_fit_doesnt_recreate_list_when_nothing_can_be_done ... ok
test shrink_to_fit_empty ... ok
test shrink_to_fit_no_vacant ... ok
test slab_get_mut ... ok
test try_remove ... ok
test double_remove_panics - should panic ... ok
test drain_rev ... ok
test compact_no_moves_needed ... ok

test result: ok. 45 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

+ RESULT=0
+ cd /var/tmp/top100_artifacts
+ rm -rf /var/tmp/top100_artifacts/slab-0.4.9
+ exit 0
